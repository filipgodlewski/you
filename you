#! /usr/bin/env zsh

# Some sane defaults
emulate -LR zsh
setopt extended_glob warn_create_global typeset_silent no_short_loops rc_quotes no_auto_pushd

# Redefine if 'you' is used as a script, not a plugin
if [[ $0 != you || -n $ZSH_SCRIPT ]]; then
  0="${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}"
  0="${${(M)0:#/*}:-$PWD/$0}"
  0="${0##*/}"
fi

# Don't leak any functions
typeset -g dotef
dotef=( ${(k)functions} )
trap "unset -f -- \"\${(k)functions[@]:|dotef}\" &>/dev/null; unset dotef" EXIT
trap "unset -f -- \"\${(k)functions[@]:|dotef}\" &>/dev/null; unset dotef; return 1" INT

local opt_help
zparseopts -D -E -K -- {h,-help}=opt_help


# Setup functions
function +you {
  cat >&2 <<EOF
you -- A very simple and personal set of wrappers.

USAGE:
    ${(j: :)${(s.::.)0#+}} <SUBCOMMAND>

OPTIONS:
    -h, --help                        Show this message.

SUBCOMMANDS:
    go <QUERY>                        Open directory in a new tmux session, or attach.
EOF
  return 0
}


function +you::go {
  cat >&2 <<EOF
USAGE:
    ${(j: :)${(s.::.)0#+}} [QUERY]

    Open queried directory in either a new tmux session, if it doesn't exist,
    or attach to an existing one. Uses zoxide to query.

ARGS:
    <QUERY>      Either the name of the directory or something that will let zoxide find it.

OPTIONS:
    -h, --help                        Show this message.
EOF
  return 0
}

function .you::go {
  local opt_help
  zparseopts -D -F -K -- {h,-help}=opt_help

  (($#opt_help)) && {$0::help; return 0}
  (($#)) && local dir_name=$(zoxide query "$@") || local dir_name=$(zoxide query -l | fzf)
  (($#dir_name)) || {echo "No results for the query '$@'.\nMaybe zoxide did not index this directory yet."; return 1}
  local session_name=$(basename $dir_name | sed 's/\./_/')

  [[ $(pgrep tmux) ]] || {tmux new-session -s $session_name -c $dir_name; return 0}
  tmux list-sessions | grep -w "$session_name" &> /dev/null
  (($? == 1)) && tmux new-session -d -s $session_name -c $dir_name
  [[ $TMUX ]] && tmux switch-client -t $session_name || tmux attach-session -t $session_name -c $reslt
}

(($# == 0 || $#opt_help)) && {+$0; return 0}

local cmd="$1"; shift
(($#opt_help)) && .$0::$cmd "$@" --help || .$0::$cmd "$@"
